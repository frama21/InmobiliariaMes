package presentacion;

//prueba
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;
import javax.swing.JScrollPane;
import logica.Controlador;
import logica.Inmueble;
import logica.Piso;
import javax.swing.ScrollPaneConstants;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.Color;
import java.awt.Font;


public class ConsultaPisosJDialog extends JDialog {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private final JPanel contentPanel = new JPanel();
	private static Controlador control;
	private JTable tableInmueble;
	int filas=0;

	/**
	 * Launch the application.
	 */
	public static void main(String... args) {
		try {
			ConsultaPisosJDialog dialog = new ConsultaPisosJDialog( control);
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setVisible(true);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	//Inicialización de los objetos necesarios de la capa de negocio
	private void initDominio() {
		try{
			control = Controlador.dameControlador();
		}catch (Exception e){
			System.err.println(e.getMessage());
		}
	}


	/**
	 * Create the dialog.
	 */
	public ConsultaPisosJDialog(Controlador control1) {
		setBackground(new Color(255, 255, 255));

		//Método que inicializa el controlador.
		initDominio();

		setBounds(100, 100, 936, 519);
		getContentPane().setLayout(new BorderLayout());
		contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
		getContentPane().add(contentPanel, BorderLayout.CENTER);
		setTitle("Consultar Pisos");
		contentPanel.setLayout(null);
		{
			JScrollPane scrollPane = new JScrollPane();
			scrollPane.setLocation(10, 11);
			scrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
			scrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);


			scrollPane.setSize(900,426);


			contentPanel.add(scrollPane);
			{
				tableInmueble = new JTable(new DefaultTableModel());
				tableInmueble.setFont(new Font("Tahoma", Font.BOLD, 12));
				tableInmueble.setBackground(Color.WHITE);
				scrollPane.setViewportView(tableInmueble);
			}
		}
		{
			JPanel buttonPane = new JPanel();
			buttonPane.setLayout(new FlowLayout(FlowLayout.RIGHT));
			getContentPane().add(buttonPane, BorderLayout.SOUTH);
			{
				JButton cancelButton = new JButton("Volver");
				cancelButton.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent e) {
						//Cierra la ventana de crear asesor.
						setVisible(false);
					}
				});
				cancelButton.setActionCommand("Cancel");
				buttonPane.add(cancelButton);
			}
		}
	}


	//Se invoca desde fuera de ésta clase.
	public void cargaInmuebles() {
		try{
			ArrayList<Inmueble> listaInmuebles = (ArrayList<Inmueble>) control.encontrarInmuebles();
			

			ArrayList<Piso> listaPisos = (ArrayList<Piso>) control.encontrarPisos();
			Iterator<Piso> it1 = listaPisos.iterator();

			
			//Objeto Piso que utilizaremos para añadir el numero de habitaciones de cada uno.
			Piso in1;
			
			//Modelo por defecto que añadiremos a nuestra tabla.
			DefaultTableModel model = (DefaultTableModel) tableInmueble.getModel();

			//Añadimos las columnas a la tabla.
			model.addColumn("Codigo");
			model.addColumn("Num.Habitaciones");
			model.addColumn("Direccion");
			model.addColumn("Localidad");
			model.addColumn("Fecha de Alta");
			model.addColumn("Superficie");
			model.addColumn("Venta/Alquiler");
			model.addColumn("Propietario");
			model.addColumn("Asesor");


			//Incluye los inmuebles con sus Visitas/Ofertas.
			for(int i=0; i<listaInmuebles.size(); i++) {
				for(int j = 0; j<listaPisos.size(); j++) {

					if(listaInmuebles.get(i).getCodId().trim().equals(listaPisos.get(j).getCodId().trim())) {

						Object nuevo[]= {listaInmuebles.get(i).getCodId(), "", listaInmuebles.get(i).getCalle(), listaInmuebles.get(i).getLocalidad(), listaInmuebles.get(i).getFechaAlta(),
								listaInmuebles.get(i).getSuperficieTotal(), listaInmuebles.get(i).getVentaAlquiler(),
								listaInmuebles.get(i).getCliente(), listaInmuebles.get(i).getAsesor()};

						model.addRow(nuevo);

					}
				}
			}



			//Para incluir la fila de los Pisos.
			int fila = 0;
			while(it1.hasNext()) {
				in1 = it1.next();

				//Pone el valor del piso en la fila n y columna 1.
				model.setValueAt(in1.getNumHabitaciones(), fila, 1);

				fila++;
			}


		}catch (Exception e){
			JOptionPane.showMessageDialog(this,e.getMessage(),"ERROR AL MOSTRAR",JOptionPane.ERROR_MESSAGE);
		}
	}
}//Fin de la clase ConsultaInmueblesJDialog.

